postUser:
  post:
    tags:
      - User Management
    summary: Create a new user
    operationId: create
    requestBody:
      content:
        application/json:
          schema:
            $ref: "../components/schemas/User.yaml"
      required: true
    responses:
      "201":
        description: Created
        content: { }
      "400":
        description: Bad Request
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "about:blank"
              title: "Bad Request"
              status: 400
              detail: "The request payload is invalid."
              instance: "/v1/users"
      "403":
        description: Forbidden
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "ForbiddenError"
              title: "Forbidden"
              status: 403
              detail: "You do not have permission to create users."
              instance: "/v1/users"
      "409":
        description: Conflict
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "ResourceConflict"
              title: "Resource conflict"
              status: 409
              detail: "A user with this email already exists."
              instance: "/v1/users"
      "500":
        description: Internal Server Error
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "about:blank"
              title: "Internal Server Error"
              status: 500
              detail: "Unexpected error occurred while creating user."
              instance: "/v1/users"

postUserToken:
  post:
    tags:
      - User Management
    summary: Generate a user's token
    operationId: createToken
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "../components/schemas/TokenRequest.yaml"
    responses:
      "200":
        description: Token successfully generated
        content:
          application/json:
            schema:
              $ref: "../components/schemas/Token.yaml"
            example:
              accessToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
              refreshToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
              expiresIn: 3600
              refreshExpiresIn: 86400
      "400":
        description: Bad Request
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "about:blank"
              title: "Bad Request"
              status: 400
              detail: "Missing or invalid user credentials."
              instance: "/v1/users/token"
      "403":
        description: Forbidden
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "ForbiddenError"
              title: "Forbidden"
              status: 403
              detail: "User is not allowed to generate tokens."
              instance: "/v1/users/token"
      "409":
        description: Conflict
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "ResourceConflict"
              title: "Resource conflict"
              status: 409
              detail: "User already has an active token."
              instance: "/v1/users/token"

      "500":
        description: Internal Server Error
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "about:blank"
              title: "Internal Server Error"
              status: 500
              detail: "Unexpected error occurred while generating token."
              instance: "/v1/users/token"
verifyCode:
  post:
    tags:
      - User Management
    operationId: verifyCode
    summary: Verify the code send to user by sms
    requestBody:
      content:
        application/json:
          schema:
            $ref: '../components/schemas/VerificationCode.yaml'
      required: true
    responses:
      '200':
        description: OK
        content:
          'application/json':
            schema:
              $ref: '../components/schemas/Token.yaml'
      "400":
        description: Invalid restaurant ID format
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "about:blank"
              title: "Bad Request"
              status: 400
              detail: "Invalid code format"
              instance: "/v1/users/verify-code"
      "404":
        description: Restaurant not found
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "about:blank"
              title: "Not Found"
              status: 404
              detail: "Verification code 4525' was not found."
              instance: "/v1/users/verify-code"
      "500":
        description: Internal server error
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "about:blank"
              title: "Internal Server Error"
              status: 500
              detail: "Unexpected error while verifying code 3456."
              instance: "/v1/users/verify-code"

uploadFile:
  post:
    tags:
      - User Management
    operationId: uploadFile
    requestBody:
      content:
        multipart/form-data:
          schema:
            $ref: "../components/schemas/FileUploadRequest.yaml"
    responses:
      "200":
        description: OK
      "400":
        description: Invalid user ID format
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "about:blank"
              title: "Bad Request"
              status: 400
              detail: "Invalid user id format"
              instance: "/v1/users/upload-file"
      "500":
        description: Internal server error
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "about:blank"
              title: "Internal Server Error"
              status: 500
              detail: "Unexpected error while retrieve file."
              instance: "/v1/users/upload-file"

downloadFile:
  get:
    tags:
      - User Management
    operationId: downloadFile
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      - name: fileType
        in: query
        schema:
          type: string
          enum:
            - ID
            - PROFILE_PHOTO
            - RIB
            - GAIN_REPORT
        required: true
    responses:
      '200':
        description: OK
        content:
          '*/*':
            schema:
              type: string
              format: binary
      "404":
        description: User not found
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "about:blank"
              title: "Not Found"
              status: 404
              detail: "UserId was not found."
              instance: "/v1/users/{userId}/download-file"

      "500":
        description: Internal server error
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "about:blank"
              title: "Internal Server Error"
              status: 500
              detail: "Unexpected error while retrieve file."
              instance: "/v1/users/{userId}/download-file"

pendingCouriers:
  get:
    tags:
      - User Management
    operationId: getPendingApprovalCouriers
    responses:
      '200':
        description: OK
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '../components/schemas/CourierRequest.yaml'

      "400":
        description: Invalid restaurant ID format
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "about:blank"
              title: "Bad Request"
              status: 400
              detail: "Invalid code format"
              instance: "/v1/admin/couriers/pending-approval"

      "500":
        description: Internal server error
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "about:blank"
              title: "Internal Server Error"
              status: 500
              detail: "Unexpected error while retrieve file."
              instance: "/v1/admin/couriers/pending-approval"

decision:
  post:
    tags:
      - User Management
    operationId: approveOrRejectCourierRegistration
    requestBody:
      content:
        application/json:
          schema:
            $ref: '../components/schemas/DecisionRequest.yaml'
      required: true
    responses:
      '202':
        description: Accepted
        content: { }
      "400":
        description: Invalid restaurant ID format
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "about:blank"
              title: "Bad Request"
              status: 400
              detail: "Invalid code format"
              instance: "/v1/admin/couriers/decision"

      "404":
        description: User not found
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "about:blank"
              title: "Not Found"
              status: 404
              detail: "UserId was not found."
              instance: "/v1/admin/couriers/decision"

      "500":
        description: Internal server error
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "about:blank"
              title: "Internal Server Error"
              status: 500
              detail: "Unexpected error while retrieve file."
              instance: "/v1/admin/couriers/decision"

disableAccount:
  patch:
    tags:
      - User Management
    operationId: disableAccount
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: object
      required: true
    responses:
      "200":
        description: OK
        content: { }
      "400":
        description: Invalid restaurant ID format
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "about:blank"
              title: "Bad Request"
              status: 400
              detail: "Invalid code format"
              instance: "/v1/admin/users/{userId}"
      "404":
        description: User not found
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "about:blank"
              title: "Not Found"
              status: 404
              detail: "UserId was not found."
              instance: "/v1/admin/users/{userId}"
      "500":
        description: Internal server error
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "about:blank"
              title: "Internal Server Error"
              status: 500
              detail: "Unexpected error while retrieve file."
              instance: "/v1/admin/users/{userId}"

logout:
  post:
    tags:
      - User Management
    operationId: logout
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
    responses:
      "204":
        description: No Content
        content: { }
      "404":
        description: User not found
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "about:blank"
              title: "Not Found"
              status: 404
              detail: "UserId was not found."
              instance: "/v1/admin/users/{userId}/logout"
      "500":
        description: Internal server error
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "about:blank"
              title: "Internal Server Error"
              status: 500
              detail: "Unexpected error logout user."
              instance: "/v1/admin/users/{userId}/logout"
      "400":
        description: Invalid restaurant ID format
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "about:blank"
              title: "Bad Request"
              status: 400
              detail: "Invalid data"
              instance: "/v1/admin/users/{userId}/logout"

userList:
  get:
    tags:
      - User Management
    operationId: getUsers
    parameters:
      - name: roles
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
            enum:
              - CUSTOMER
              - DRIVER
              - GUEST
              - ADMIN
              - UNKNOWN
    responses:
      "200":
        description: OK
        content:
          'application/json':
            schema:
              type: array
              items:
                $ref: "../components/schemas/UserResponse.yaml"

    "400":
      description: Invalid restaurant ID format
      content:
        application/problem+json:
          schema:
            $ref: "../components/responses/ErrorResponse.yaml"
          example:
            type: "about:blank"
            title: "Bad Request"
            status: 400
            detail: "Invalid code format"
            instance: "/v1/admin/users"

    "500":
      description: Internal server error
      content:
        application/problem+json:
          schema:
            $ref: "../components/responses/ErrorResponse.yaml"
          example:
            type: "about:blank"
            title: "Internal Server Error"
            status: 500
            detail: "Unexpected error when retrieving error."
            instance: "/v1/admin/users"

updateUserProfile:
    put:
      tags:
        - User Management
      operationId: updateUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "../components/schemas/UserUpdateRequest.yaml"
        required: true
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: "../components/schemas/UserUpdateResponse.yaml"
        "400":
          description: Invalid data
          content:
            application/problem+json:
              schema:
                $ref: "../components/responses/ErrorResponse.yaml"
              example:
                type: "about:blank"
                title: "Bad Request"
                status: 400
                detail: "Invalid code format"
                instance: "/v1/users/{userId}"
        "404":
          description: User not found
          content:
            application/problem+json:
              schema:
                $ref: "../components/responses/ErrorResponse.yaml"
              example:
                type: "about:blank"
                title: "Not Found"
                status: 404
                detail: "UserId was not found."
                instance: "/v1/users/{userId}"
        "500":
          description: Internal server error
          content:
            application/problem+json:
              schema:
                $ref: "../components/responses/ErrorResponse.yaml"
              example:
                type: "about:blank"
                title: "Internal Server Error"
                status: 500
                detail: "Unexpected error when retrieving error."
                instance: "/v1/users/{userId}"

sendVerificationCode:
  post:
    tags:
      - User Management
    operationId: sendVerificationCode
    requestBody:
      content:
        application/json:
          schema:
            $ref: "../components/schemas/SendCodeRequest.yaml"
      required: true
    responses:
      "204":
        description: No Content
        content: { }
      "500":
        description: Internal server error
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "about:blank"
              title: "Internal Server Error"
              status: 500
              detail: "Unexpected error when retrieving error."
              instance: "/v1/users/{userId}"

validateCode:
  post:
    tags:
      - User Management
    operationId: validateCode
    requestBody:
      content:
        application/json:
          schema:
            $ref: "../components/schemas/ValidationCodeRequest.yaml"
      required: true
    responses:
      "204":
        description: No Content
        content: { }
      "404":
        description: Code not found
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "about:blank"
              title: "Not Found"
              status: 404
              detail: "UserId was not found."
              instance: "/v1/users/validate-code"
      "500":
        description: Internal server error
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "about:blank"
              title: "Internal Server Error"
              status: 500
              detail: "Unexpected error when retrieving error."
              instance: "/v1/users/validate-code"

createOrganization:
  post:
    tags:
      - Organization Management
    operationId: createOrganization
    requestBody:
        content:
          application/json:
            schema:
              $ref: "../components/schemas/CreateOrganizationRequest.yaml"
        required: true
    responses:
        "201":
          description: Created
          content:
            'application/json':
              schema:
                $ref: "../components/schemas/OrganizationResponse.yaml"
        "400":
          description: Invalid data
          content:
            application/problem+json:
              schema:
                $ref: "../components/responses/ErrorResponse.yaml"
              example:
                type: "about:blank"
                title: "Bad Request"
                status: 400
                detail: "Invalid data"
                instance: "/v1/organizations"
        "500":
          description: Internal server error
          content:
            application/problem+json:
              schema:
                $ref: "../components/responses/ErrorResponse.yaml"
              example:
                type: "about:blank"
                title: "Internal Server Error"
                status: 500
                detail: "Unexpected error when retrieving error."
                instance: "/v1/organizations"

fetchOrganizations:
  get:
    tags:
      - Organization Management
    operationId: getOrganizations
    responses:
      "200":
        description: List of organizations
        content:
          'application/json':
            schema:
              $ref: "../components/schemas/OrganizationResponse.yaml"
      "400":
        description: Invalid data
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "about:blank"
              title: "Bad Request"
              status: 400
              detail: "Invalid data"
              instance: "/v1/organizations"
      "500":
        description: Internal server error
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "about:blank"
              title: "Internal Server Error"
              status: 500
              detail: "Unexpected error when retrieving error."
              instance: "/v1/organizations"

addMember:
  post:
    tags:
      - Organization Management
    operationId: addMembers
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            $ref: "../components/schemas/User.yaml"
      required: true
    responses:
      "201":
        description: Created
        content: { }
      "400":
        description: Invalid data
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "about:blank"
              title: "Bad Request"
              status: 400
              detail: "Invalid data"
              instance: "/v1/organizations/{organizationId}"
      "500":
        description: Internal server error
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "about:blank"
              title: "Internal Server Error"
              status: 500
              detail: "Unexpected error when retrieving error."
              instance: "/v1/organizations/{organizationId}/members"
      "404":
        description: Code not found
        content:
          application/problem+json:
            schema:
              $ref: "../components/responses/ErrorResponse.yaml"
            example:
              type: "about:blank"
              title: "Not Found"
              status: 404
              detail: "UserId was not found."
              instance: "/v1/organizations/{organizationId}/members"
