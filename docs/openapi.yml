openapi: 3.1.0
info:
  title: Dineroo Restaurant API
  version: v1
  contact:
    name: API Management Team
    url: https://dineroo.api.com
    email: dineroo.cfg@gmail.com

servers:
  - url: http://localhost:8080
    description: Local development server

paths:
  /v1/restaurants:
    get:
      tags:
        - Restaurant Management
      summary: Retrieve all restaurants
      operationId: getRestaurants
      responses:
        "200":
          description: A list of available restaurants
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestaurantCollection"

  /v1/restaurants/{restaurantId}:
    get:
      tags:
        - Restaurant Management
      summary: Retrieve a specific restaurant by ID
      operationId: getRestaurantById
      parameters:
        - name: restaurantId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Restaurant details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Restaurant"

  /v1/restaurants/{restaurantId}/menus/{menuId}:
    get:
      tags:
        - Restaurant Management
      summary: Retrieve a menu by restaurant and menu ID
      operationId: getMenuById
      parameters:
        - name: restaurantId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: menuId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Menu details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Menu"

components:
  schemas:
    RestaurantCollection:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/RestaurantItem"

    RestaurantItem:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        imageUrl:
          type: string

    Restaurant:
      type: object
      required:
        - id
        - name
        - menus
        - products
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        imageUrl:
          type: string
        menus:
          type: array
          uniqueItems: true
          items:
            $ref: "#/components/schemas/Menu"
        products:
          type: array
          uniqueItems: true
          items:
            $ref: "#/components/schemas/Product"

    Menu:
      type: object
      required:
        - id
        - name
        - productIds
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        imageUrl:
          type: string
        productIds:
          type: array
          uniqueItems: true
          items:
            type: string
            format: uuid

    Product:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        imageUrl:
          type: string

tags:
  - name: Restaurant Management
    description: Endpoints for managing restaurants, menus, and products
